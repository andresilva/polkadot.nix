name: "Build and publish to Cachix and FlakeHub ❄️"
on:
  push:
    branches:
      - master
  workflow_run:
    workflows: ["Update flake.lock ❄️"]
    types:
      - completed
jobs:
  discover:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install nix
        uses: cachix/install-nix-action@v30
      - name: Discover flake packages
        id: discover
        run: |
          pkgs=$(nix flake show --json | jq -c '.packages."x86_64-linux" | keys')
          echo "pkgs=$pkgs" >> "$GITHUB_OUTPUT"
    outputs:
      pkgs: ${{ steps.discover.outputs.pkgs }}
  build:
    needs: discover
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        pkg: ${{ fromJson(needs.discover.outputs.pkgs) }}
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Increase swap size
        uses: pierotofy/set-swap-space@fc79b3f67fa8a838184ce84a674ca12238d2c761
        with:
          swap-size-gb: 8
      - name: Enable zswap
        run: |
          echo "zswap (before)"
          grep -r . /sys/module/zswap/parameters/
          echo 0 | sudo tee /sys/module/zswap/parameters/enabled >/dev/null
          echo 40 | sudo tee /sys/module/zswap/parameters/max_pool_percent >/dev/null
          echo zstd | sudo tee /sys/module/zswap/parameters/compressor >/dev/null
          echo zsmalloc | sudo tee /sys/module/zswap/parameters/zpool >/dev/null
          echo 1 | sudo tee /sys/module/zswap/parameters/shrinker_enabled >/dev/null
          echo 1 | sudo tee /sys/module/zswap/parameters/enabled >/dev/null
          sudo sysctl vm.swappiness=80
          echo "zswap (after)"
          grep -r . /sys/module/zswap/parameters/
      - name: Free disk space
        uses: jlumbroso/free-disk-space@54081f138730dfa15788a46383842cd2f914a1be
        with:
          tool-cache: true
          swap-storage: false
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install nix
        uses: cachix/install-nix-action@v30
      - name: Setup cachix
        uses: cachix/cachix-action@v15
        with:
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
          name: polkadot
      - name: Build ${{ matrix.pkg }}
        run: |
          CORES=$(nproc)
          CORES=$((CORES - 1))
          echo "Using $CORES cores."
          nix build -L --cores "$CORES" ".#${{ matrix.pkg }}"
      # - name: Nix flake develop
      #   run: nix develop
      - name: Publish to FlakeHub
        uses: DeterminateSystems/flakehub-push@main
        with:
          name: "andresilva/polkadot.nix"
          rolling: true
          visibility: public
        continue-on-error: true
