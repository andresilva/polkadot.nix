name: "Build changed flake packages ❄️"
on:
  pull_request:
    branches:
      - master
jobs:
  discover:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Install nix
        uses: cachix/install-nix-action@v31
      - name: Determine changed packages
        id: discover
        run: |
          SYSTEM=x86_64-linux
          BASE="${{ github.event.pull_request.base.sha }}"
          HEAD="${{ github.sha }}"

          drvmap() {
            git checkout -q "$1"
            # Produce a JSON object: { "pkg": "/nix/store/...-pkg.drv", ... }
            nix eval --json ".#packages.${SYSTEM}" \
                --apply 'builtins.mapAttrs (n: v: v.drvPath)' \
                2>/dev/null || echo '{}'
          }

          base_map="$(drvmap "$BASE")"
          head_map="$(drvmap "$HEAD")"
          git checkout -q "$HEAD"

          base_map=${base_map:-'{}'}
          head_map=${head_map:-'{}'}

          changed=$(
            jq -c --null-input \
              --argjson b "$base_map" \
              --argjson h "$head_map" '
              [ ($h|keys[]) | select( ($h[.] // "") != ($b[.] // "") ) ]
            '
          )

          echo "pkgs=$changed" >> "$GITHUB_OUTPUT"
    outputs:
      pkgs: ${{ steps.discover.outputs.pkgs }}
  build:
    needs: discover
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        pkg: ${{ fromJson(needs.discover.outputs.pkgs) }}
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      - name: Setup runner
        uses: ./.github/actions/setup-runner
        with:
          cachix_token: "${{ secrets.CACHIX_AUTH_TOKEN }}"
      - name: Build ${{ matrix.pkg }}
        run: |
          CORES=$(nproc)
          CORES=$((CORES - 1))
          echo "Using $CORES cores."
          nix build -L --cores "$CORES" ".#${{ matrix.pkg }}"
